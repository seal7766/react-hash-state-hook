{"version":3,"file":"react-hash-state-hook.cjs.production.min.js","sources":["../src/useHashState.ts","../src/utils/getHashParams.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport getHashParams from './utils/getHashParams';\n\ntype useHashStateProps<State> = {\n  keys: (keyof State)[];\n};\n\nconst useHashState = <State extends Record<string, any> = {}>({\n  keys,\n}: useHashStateProps<State>) => {\n  const [state, setHookState] = useState<Partial<State>>(getHashParams(keys));\n\n  const onChangeHash = useCallback(() => {\n    const hashParams = new URLSearchParams(window.location.hash.slice(1));\n    const newState = keys\n      .map(key => {\n        const strKey = String(key);\n        const value = hashParams.get(strKey);\n        return { [strKey]: value };\n      })\n      .reduce((prev, cur) => {\n        return {\n          ...prev,\n          ...cur,\n        };\n      }, {});\n\n    setHookState(prevState => {\n      return { ...prevState, ...newState };\n    });\n  }, [keys]);\n\n  useEffect(() => {\n    window.addEventListener('hashchange', onChangeHash);\n    return window.removeEventListener('hashchange', onChangeHash);\n  }, [onChangeHash]);\n\n  const setState = (newState: Partial<State>) => {\n    const updateState = { ...state, ...newState };\n    setHookState(updateState);\n\n    const url = new URL(window.location.href);\n    url.hash = Object.entries(updateState)\n      .map(([key, value]) => {\n        return `${key}=${value}`;\n      })\n      .join('&');\n    window.history.pushState(null, '', url.toString());\n  };\n\n  return [state, setState] as const;\n};\n\nexport default useHashState;\n","const getHashParams = <State>(keys: (keyof State)[]): Partial<State> => {\n  const hashParams = new URLSearchParams(window.location.hash.slice(1));\n  return keys.reduce((prev, cur) => {\n    const strKey = String(cur);\n    const value = hashParams.get(strKey);\n    return { ...prev, [strKey]: value ?? void 0 };\n  }, {});\n};\n\nexport default getHashParams;\n"],"names":["_ref","keys","_useState","useState","hashParams","URLSearchParams","window","location","hash","slice","reduce","prev","cur","strKey","String","value","get","_extends","_extends2","getHashParams","state","setHookState","onChangeHash","useCallback","newState","map","key","_ref2","prevState","useEffect","addEventListener","removeEventListener","updateState","url","URL","href","Object","entries","_ref3","join","history","pushState","toString"],"mappings":"8UAOqB,SAAHA,OAChBC,EAAID,EAAJC,KAEAC,EAA8BC,WCVV,SAAQF,GAC5B,IAAMG,EAAa,IAAIC,gBAAgBC,OAAOC,SAASC,KAAKC,MAAM,IAClE,OAAOR,EAAKS,QAAO,SAACC,EAAMC,SAClBC,EAASC,OAAOF,GAChBG,EAAQX,EAAWY,IAAIH,GAC7B,OAAAI,KAAYN,IAAIO,MAAGL,SAASE,EAAAA,OAAS,EAAMG,MAC1C,IDIoDC,CAAclB,IAA9DmB,EAAKlB,KAAEmB,EAAYnB,KAEpBoB,EAAeC,eAAY,WAC/B,IAAMnB,EAAa,IAAIC,gBAAgBC,OAAOC,SAASC,KAAKC,MAAM,IAC5De,EAAWvB,EACdwB,KAAI,SAAAC,SACGb,EAASC,OAAOY,GAChBX,EAAQX,EAAWY,IAAIH,GAC7B,OAAAc,MAAUd,GAASE,EAAKY,KAEzBjB,QAAO,SAACC,EAAMC,GACb,OAAAK,KACKN,EACAC,KAEJ,IAELS,GAAa,SAAAO,GACX,OAAAX,KAAYW,EAAcJ,QAE3B,CAACvB,IAoBJ,OAlBA4B,aAAU,WAER,OADAvB,OAAOwB,iBAAiB,aAAcR,GAC/BhB,OAAOyB,oBAAoB,aAAcT,KAC/C,CAACA,IAeG,CAACF,EAbS,SAACI,GAChB,IAAMQ,EAAWf,KAAQG,EAAUI,GACnCH,EAAaW,GAEb,IAAMC,EAAM,IAAIC,IAAI5B,OAAOC,SAAS4B,MACpCF,EAAIzB,KAAO4B,OAAOC,QAAQL,GACvBP,KAAI,SAAAa,GACH,OADQA,SAAOA,QAGhBC,KAAK,KACRjC,OAAOkC,QAAQC,UAAU,KAAM,GAAIR,EAAIS"}